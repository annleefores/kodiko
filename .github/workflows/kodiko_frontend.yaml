name: kodiko-frontend
on:
    workflow_dispatch:
    push:
        branches:
        - main
        paths:
        - "web/**"
    pull_request:
        branches:
        - main
        paths:
        - "web/**"

# Concurrency group name ensures concurrent workflow runs wait for any in-progress job to finish
concurrency:
  group: merge-${{ github.ref }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  deploy-kodiko-frontend:
    name: Build and Deploy Kodiko fronend
    runs-on: ubuntu-latest
    environment: production
    defaults:
        run:
          working-directory: ./web/
    env:
    # Define your envs needed for static generation:
        ENV_NAME: ${{ secrets.ENV_NAME }}
        NEXT_PUBLIC_CODEPOD_WS: ${{ secrets.NEXT_PUBLIC_CODEPOD_WS }}
        NEXT_PUBLIC_BACKEND: ${{ secrets.NEXT_PUBLIC_BACKEND }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        REGION: ${{ secrets.REGION }}
        COGNITO_REGION: ${{ secrets.COGNITO_REGION }}
        COGNITO_DOMAIN: ${{ secrets.COGNITO_DOMAIN }}
        COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
        COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID }}
        COGNITO_CLIENT_SECRET: ${{ secrets.COGNITO_CLIENT_SECRET }}
        HOSTED_ZONE_NAME: ${{ secrets.HOSTED_ZONE_NAME }}
        DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
        CERT_ARN: ${{ secrets.CERT_ARN }}
        ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
        

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
    
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: ./web/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/GitHub
          # role-duration-seconds: 7200 # adjust as needed for your build time
          aws-region: ${{ env.REGION }}

      - name: Build and deploy app
        run: |
          npx sst deploy --stage prod