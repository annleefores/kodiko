# eks or local: boolean
eks: true

awsLBC:
  syncWave: "1"
  spec:
    source:
      targetRevision: 'v1.6.2'
      chart: aws-load-balancer-controller
      repoURL: https://aws.github.io/eks-charts
      helm:
        releaseName: aws-load-balancer-controller
        valuesObject:
            clusterName: kodiko 
            serviceAccount:
                create: false
                name: aws-load-balancer-controller
            region: ap-south-1
            # update EKS VPC ID
            vpcId: 
  destination:
    server: https://kubernetes.default.svc
    ns: kube-system


nginx:
  syncWave: "2"
  spec:
    source:
      targetRevision: '4.8.3'
      chart: ingress-nginx
      repoURL: https://kubernetes.github.io/ingress-nginx
      helm:
        releaseName: ingress-nginx
        valuesObject:
            controller:
              extraArgs:
                http: 8080
                https: 8081
              containerPort:
                http: 8080
                https: 8081
              image:
                allowPrivilegeEscalation: false
              service:
                type: ClusterIP
  destination:
    server: https://kubernetes.default.svc
    ns: ingress-nginx

eso:
  syncWave: "3"
  spec:
    source:
      targetRevision: '0.9.7'
      chart: external-secrets
      repoURL: https://charts.external-secrets.io
      helm:
        releaseName: external-secrets
        valuesObject:
            installCRDs: true
            webhook:
              port: 9443
  destination:
    server: https://kubernetes.default.svc
    ns: external-secrets

jenkins:
  syncWave: "4"
  spec:
    sources:
      targetRevision: '4.8.3'
      chart: jenkins
      repoURL: https://charts.jenkins.io
      helm:
        releaseName: jenkins
        valuesObject:
          controller:
            jenkinsUrl: "http://localhost:8050"
            componentName: "jenkins-controller"
            image: "annleefores/jenkins-controller"
            tag: "latest"
            imagePullPolicy: "Always"
            numExecutors: 0

            # Update via --set
            adminPassword:

            resources:
              requests:
                cpu: "500m"
                memory: "512Mi"
              limits:
                cpu: "2000m"
                memory: "4096Mi"

            JCasC:
              systemMessage: Welcome to Kodiko CI\CD server.  This Jenkins is configured and managed 'as code'.
              
              sonarqube:
                credentials:
                  id: "sonar_token"
                  secret: "secret value"
                  description: "Sonar token"
                installations:
                  name: "sq1"
                  serverUrl: "http://sonarqube-sonarqube.sonarqube.svc.cluster.local:9000"
                  credentialsId: sonar_token

              jobs:
                repoURL: https://github.com/annleefores/kodiko.git
                branch: '*/dev'
            
            servicePort: 8050
            targetPort: 8080
            serviceType: LoadBalancer
            installPlugins: false

      extRepoURL: https://github.com/annleefores/kodiko.git
      extBranch: dev
      extPath: kubernetes/system-config/ext-secrets/kaniko

  destination:
    server: https://kubernetes.default.svc
    ns: jenkins

manifests:
  syncWave: "5"
  spec:
    source:
      branch: dev
      path: kubernetes/system-config/manifests
      repoURL: https://github.com/annleefores/kodiko.git
      helm:
        releaseName: manifests
        valuesObject:
            eks: true
               
  destination:
    server: https://kubernetes.default.svc
    ns: default

sonarqube:
  syncWave: "6"
  spec:
    source:
      targetRevision: '10.3.0'
      chart: sonarqube
      repoURL: https://SonarSource.github.io/helm-chart-sonarqube
      helm:
        releaseName: sonarqube
        valuesObject:
          image:
            tag: 10.3.0-community
            pullPolicy: IfNotPresent

          service:
            type: LoadBalancer
          
          sonarWebContext: "/"

          persistence:
            enabled: true

          readinessProbe:
            failureThreshold: 10

          livenessProbe:
            failureThreshold: 10

          startupProbe:
            failureThreshold: 24

  destination:
    server: https://kubernetes.default.svc
    ns: sonarqube