pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: kaniko
            image: gcr.io/kaniko-project/executor:debug
            command:
            - sleep
            args:
            - 9999999
            tty: true
            volumeMounts:
            - name: kaniko-secret
              mountPath: /kaniko/.docker
            restartPolicy: Never
            volumes:
              - name: kaniko-secret
                secret:
                    secretName: dockercred
                    items:
                    - key: .dockerconfigjson
                      path: config.json
          - name: sonarqube
            image: annleefores/jenkins-sonarqube
            command:
            - sleep
            args:
            - 99d
              '''
    }
  }

  stages {
    // stage('sonarqube') {
    // steps{
    //   container('sonarqube') {
    //       withSonarQubeEnv(installationName: 'sq1') {
    //       sh "/home/sonar-scanner-cli/bin/sonar-scanner -Dsonar.projectKey=kodiko-backend -Dsonar.sources=server/backend -Dsonar.host.url=${env.SONAR_HOST_URL} -Dsonar.login=${env.SONAR_AUTH_TOKEN}"
    //      }
    //     }
    //   }
    // }

    // stage('quality gate') {
    //   steps{
    //    timeout(time: 5, unit: 'MINUTES') {
    //         waitForQualityGate abortPipeline: true
    //    }
    //   }
    // }

    stage('backend build and push') {
      environment {
        DOCKER_IMAGE = "annleefores/kodiko-backend:${BUILD_NUMBER}-${GIT_COMMIT}"
      }
      steps{
        container('kaniko') {
          sh "/kaniko/executor --context `pwd` --destination ${env.DOCKER_IMAGE}"
      }
    }
  }
}
}