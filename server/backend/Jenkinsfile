pipeline {
  agent {
    docker {image 'python:3.10.12-buster'}
  }
  environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }



  stages {
    stage('SQ') {
    steps{
       script {
           withSonarQubeEnv(installationName: 'sq1', envOnly: true) {
               sh "${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectKey=kodiko -Dsonar.sources=. -Dsonar.host.url=${env.SONAR_HOST_URL} -Dsonar.login=${env.SONAR_AUTH_TOKEN}"
           }
       }
   }
   }

    stage('Quality Gate') {
      steps{
       timeout(time: 2, unit: 'MINUTES') {
            // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
            // true = set pipeline to UNSTABLE, false = don't
            waitForQualityGate abortPipeline: true
        }
        }
    }
  }
}