pipeline {
  agent {
    docker {image 'python:3.10.12-buster'}
  }

  stages {
    stage('Static Code Analysis') {
      steps{
            withSonarQubeEnv(installationName: 'sq1', envOnly: true) {
              println "${env.SONAR_HOST_URL} "
            }
        }
    }
    stage('Quality Gate') {
      steps{
       timeout(time: 2, unit: 'MINUTES') {
            // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
            // true = set pipeline to UNSTABLE, false = don't
            waitForQualityGate abortPipeline: true
        }
        }
    }
  }
}