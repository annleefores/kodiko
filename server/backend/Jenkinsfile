pipeline {
  agent {
    docker {image 'annleefores/jenkins-agent'}
  }

  stages {
    
    stage('sonarqube') {
    steps{
      withSonarQubeEnv(installationName: 'sq1') {
          sh "/home/sonar-scanner-cli/bin/sonar-scanner -Dsonar.projectKey=kodiko-backend -Dsonar.sources=server/backend -Dsonar.host.url=${env.SONAR_HOST_URL} -Dsonar.login=${env.SONAR_AUTH_TOKEN}"
        }
      }
    }

    stage('quality gate') {
      steps{
       timeout(time: 5, unit: 'MINUTES') {
            waitForQualityGate abortPipeline: true
       }
      }
    }

    stage('backend container image build and push') {
      environment {
        DOCKER_IMAGE = "annleefores/kodiko-backend:${BUILD_NUMBER}-${GIT_COMMIT}"
        // REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps{
        script {
          def dockerImage = docker.build("${DOCKER_IMAGE}", "./server/backend")
        }
      }
    }
  }
}